<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.catering.mapper.RestaurantMapper">

    <resultMap type="Restaurant" id="RestaurantResult">
        <result property="restaurantId" column="restaurant_id"/>
        <result property="name" column="name"/>
        <result property="deptId" column="dept_id"/>
        <result property="legalPerson" column="legal_person"/>
        <result property="tel" column="tel"/>
        <result property="premises" column="premises"/>
        <result property="signDate" column="sign_date"/>
        <result property="expireDate" column="expire_date"/>
        <result property="size" column="size"/>
        <result property="nature" column="nature"/>
        <result property="longitude" column="longitude"/>
        <result property="latitude" column="latitude"/>
        <result property="storePhoto" column="store_photo"/>
        <result property="qrCode" column="qr_code"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectRestaurantVo">
        select restaurant_id, name, dept_id, legal_person, tel, premises, sign_date, expire_date, size, nature,
        longitude, latitude, store_photo, qr_code, status, create_by, create_time, update_by, update_time,
        remark from cy_restaurant
    </sql>

    <select id="selectRestaurantList" parameterType="Restaurant" resultMap="RestaurantResult">
        <!--<include refid="selectRestaurantVo"/>-->
        select r.* from cy_restaurant r
        left join sys_dept d on r.dept_id = d.dept_id
        where 1=1
        <if test="size != null  and size != ''">and size = #{size}</if>
        <if test="nature != null  and nature != ''">and nature = #{nature}</if>
        <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
        <if test="legalPerson != null  and legalPerson != ''">and legal_person = #{legalPerson}</if>
        <if test="tel != null  and tel != ''">and tel = #{tel}</if>
        <if test="status != null ">and r.status = #{status}</if>
        <if test="deptId != null and deptId != 0">
            AND (r.dept_id = #{deptId} OR r.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{deptId},ancestors) ))
        </if>
        ${params.dataScope}
    </select>

    <select id="selectRestaurantById" parameterType="Long" resultMap="RestaurantResult">
        <include refid="selectRestaurantVo"/>
        where restaurant_id = #{restaurantId}
    </select>

    <insert id="insertRestaurant" parameterType="Restaurant" useGeneratedKeys="true" keyProperty="restaurantId">
        insert into cy_restaurant
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="deptId != null and deptId != 0">dept_id,</if>
            <if test="legalPerson != null">legal_person,</if>
            <if test="tel != null">tel,</if>
            <if test="premises != null">premises,</if>
            <if test="signDate != null">sign_date,</if>
            <if test="expireDate != null">expire_date,</if>
            <if test="size != null">size,</if>
            <if test="nature != null">nature,</if>
            <if test="longitude != null">longitude,</if>
            <if test="latitude != null">latitude,</if>
            <if test="storePhoto != null">store_photo,</if>
            <if test="qrCode != null">qr_code,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="deptId != null and deptId != 0">#{deptId},</if>
            <if test="legalPerson != null">#{legalPerson},</if>
            <if test="tel != null">#{tel},</if>
            <if test="premises != null">#{premises},</if>
            <if test="signDate != null">#{signDate},</if>
            <if test="expireDate != null">#{expireDate},</if>
            <if test="size != null">#{size},</if>
            <if test="nature != null">#{nature},</if>
            <if test="longitude != null">#{longitude},</if>
            <if test="latitude != null">#{latitude},</if>
            <if test="storePhoto != null">#{storePhoto},</if>
            <if test="qrCode != null">#{qrCode},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateRestaurant" parameterType="Restaurant">
        update cy_restaurant
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="legalPerson != null">legal_person = #{legalPerson},</if>
            <if test="tel != null">tel = #{tel},</if>
            <if test="premises != null">premises = #{premises},</if>
            <if test="signDate != null">sign_date = #{signDate},</if>
            <if test="expireDate != null">expire_date = #{expireDate},</if>
            <if test="size != null">size = #{size},</if>
            <if test="nature != null">nature = #{nature},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="storePhoto != null">store_photo = #{storePhoto},</if>
            <if test="qrCode != null">qr_code = #{qrCode},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where restaurant_id = #{restaurantId}
    </update>

    <delete id="deleteRestaurantById" parameterType="Long">
        delete from cy_restaurant where restaurant_id = #{restaurantId}
    </delete>

    <delete id="deleteRestaurantByIds" parameterType="String">
        delete from cy_restaurant where restaurant_id in
        <foreach item="restaurantId" collection="array" open="(" separator="," close=")">
            #{restaurantId}
        </foreach>
    </delete>

    <select id="canRecycle" resultMap="RestaurantResult">
        select r.*
        from cy_restaurant r
        left join sys_dept d on r.dept_id = d.dept_id
        where 1=1
        <if test="restaurantId != null ">and restaurant_id = #{restaurantId}</if>
        <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
        ${sqlString}
    </select>

    <select id="countByDeptId" resultType="int">
        SELECT COUNT(*) FROM cy_restaurant r
        LEFT JOIN sys_dept d ON r.dept_id = d.dept_id
        WHERE 1=1
        AND (r.dept_id = #{deptId} OR r.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
        (#{deptId},ancestors) ))
    </select>

    <select id="brandedCount" resultType="int">
        SELECT COUNT(*) FROM
        (
        SELECT DISTINCT(restaurant_id) FROM cy_recovery_record
        UNION
        SELECT DISTINCT(restaurant_id) FROM cy_check_record
        ) a
        <if test="restaurantIds != null and restaurantIds.length>0 and restaurantIds[0]!=''">
            WHERE a.restaurant_id IN
            <foreach item="restaurantId" collection="restaurantIds" open="(" separator="," close=")">
                #{restaurantId}
            </foreach>
        </if>
    </select>

    <select id="selectList" resultMap="RestaurantResult">
        select r.*
        from cy_restaurant r
        left join sys_dept d on r.dept_id = d.dept_id
        where 1=1
        <if test="restaurantQueryData != null ">
            <if test="restaurantQueryData.restaurantIds != null and restaurantQueryData.restaurantIds.length>0 and restaurantQueryData.restaurantIds[0]!=''">
                and r.restaurant_id IN
                <foreach item="restaurantId" collection="restaurantQueryData.restaurantIds" open="(" separator=","
                         close=")">
                    #{restaurantId}
                </foreach>
            </if>
        </if>
        ${restaurantQueryData.sqlString}
    </select>
</mapper>